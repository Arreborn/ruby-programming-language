=== Implementationsplan ===
För att kunna sätta igång med programmeringen tidigt under nästa period följer här en grov ordning som projektet ska skrivas i:

X 1. Scope - bygg upp möjligheten att skapa ett scope, se till att det "globala" main-scopet fungerar och kan implementeras
X 2. Variabeltilldelning - möjligheten att lagra godtycklig data som en variabel
X 3. Egen print och whatis() - för att underlätta testning
X 4. Aritmetik - all möjlig aritmetik ska kunna utvärderas och producera ett resultat (detta ska kunna fungera med variabler)
X - 4.5. Booleans
 X - 4.5.5 Flyttal
 X - 4.5.5.5 Flyttal Aritmetik
X - 5. Styrstrukturer (flyttas nog högre)
- 6. While-loop - ska få ett eget scope(?)
- 7. For-loop - ska få ett eget scope
- 12. Användardefinierade funktioner - ska få ett eget scope -----
- 13. Rekursion - varje nästlad funktion ska då ha sitt eget scope


Extras for higher grade
- 5. Strängar - lagra godtycklig text som en variabel
- 6. Listor - närliggande komplexitet som en sträng
  - 6.5. For each-loop - ska få ett eget scope
- 11. Egenbyggda funktioner för strängar, listor m.m. (se append, pop för listor som exempel)
- 7. Variabelkonvertering - t.ex. int -> string




--- Saker som lutar mot en femma

- 16. Klasser och metoder - Inte ett krav för språket

- 14. Egen test-modul - likt en enklare catch eller unit:test för vårt språk
- 15. Felhantering - Ett mål med språket är att fel ska hanteras på ett snyggt sätt, och presenteras användarvänligt

